import{_ as s,o as n,c as a,a as l}from"./app.59cab656.js";var e="/zhlint/assets/logo.948e11c8.svg",p="/zhlint/assets/screenshot-cli.d1fc8a37.png",o="/zhlint/assets/screenshot-browser.284a03ca.png";const h=JSON.parse('{"title":"zhlint","description":"","frontmatter":{"title":"zhlint"},"headers":[{"level":2,"title":"How to install","slug":"how-to-install"},{"level":2,"title":"Usage","slug":"usage"},{"level":3,"title":"As CLI","slug":"as-cli"},{"level":3,"title":"As Node.js package","slug":"as-node-js-package"},{"level":3,"title":"As a standalone package","slug":"as-a-standalone-package"},{"level":2,"title":"API","slug":"api"},{"level":3,"title":"Options","slug":"options"},{"level":3,"title":"RC Config","slug":"rc-config"},{"level":3,"title":"Output","slug":"output"},{"level":3,"title":"Advanced usage","slug":"advanced-usage-2"},{"level":2,"title":"Features","slug":"features"},{"level":3,"title":"Markdown syntax support","slug":"markdown-syntax-support"},{"level":3,"title":"Hexo tags syntax support","slug":"hexo-tags-syntax-support"},{"level":3,"title":"Setup ignored cases","slug":"setup-ignored-cases"},{"level":2,"title":"Supported preproccessors (hyper parsers)","slug":"supported-preproccessors-hyper-parsers"},{"level":2,"title":"Supported rules","slug":"supported-rules"},{"level":2,"title":"More information","slug":"more-information"}],"relativePath":"index.md"}'),t={name:"index.md"},c=l('<h1 id="zhlint" tabindex="-1"><img src="'+e+`" alt="logo"> zhlint <a class="header-anchor" href="#zhlint" aria-hidden="true">#</a></h1><p>A linting tool for Chinese text content.</p><h2 id="how-to-install" tabindex="-1">How to install <a class="header-anchor" href="#how-to-install" aria-hidden="true">#</a></h2><p>You could easily install <code>zhlint</code> through <code>npm</code> or <code>yarn</code>:</p><div class="language-bash"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;"># install through npm</span></span>
<span class="line"><span style="color:#A6ACCD;">npm install zhlint -g</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># or through yarn</span></span>
<span class="line"><span style="color:#A6ACCD;">yarn global add zhlint</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># or through pnpm</span></span>
<span class="line"><span style="color:#A6ACCD;">pnpm add zhlint -g</span></span>
<span class="line"></span></code></pre></div><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h2><h3 id="as-cli" tabindex="-1">As CLI <a class="header-anchor" href="#as-cli" aria-hidden="true">#</a></h3><div class="language-bash"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;"># glob files, lint them, and print validation report,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># and exit with code \`1\` if there is any error found.</span></span>
<span class="line"><span style="color:#A6ACCD;">zhlint </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">file-pattern</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># glob files and fix their all possilbly found errors.</span></span>
<span class="line"><span style="color:#A6ACCD;">zhlint </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">file-pattern</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> --fix</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># lint the file and output fixed content into another file</span></span>
<span class="line"><span style="color:#A6ACCD;">zhlint </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">input-file-path</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> --output=</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">output-file-path</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># print usage info</span></span>
<span class="line"><span style="color:#A6ACCD;">zhlint --help</span></span>
<span class="line"></span></code></pre></div><p>The validation report might look like this:</p><p><img src="`+p+`" alt=""></p><h4 id="advanced-usage" tabindex="-1">Advanced usage <a class="header-anchor" href="#advanced-usage" aria-hidden="true">#</a></h4><p>zhlint also supports rc and ignore config files for custom rules:</p><details><div class="language-bash"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;"># .zhlintrc by default</span></span>
<span class="line"><span style="color:#A6ACCD;">zhlint --config </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">filepath</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># .zhlintignore by default</span></span>
<span class="line"><span style="color:#A6ACCD;">zhlint --ignore </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">filepath</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># current directory by default</span></span>
<span class="line"><span style="color:#A6ACCD;">zhlint --dir </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">path</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>In the config file, you can write a JSON like:</p><div class="language-json"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">preset</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">default</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">rules</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">adjustedFullWidthPunctuation</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>For more details, see <a href="#supported-rules">supported rules</a>.</p><p>In the ignore file, you can write some lines of ignored cases like:</p><div class="language-txt"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">( , )</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>For more details, see <a href="#setup-ignored-cases">setup ignored cases</a>.</p></details><h3 id="as-node-js-package" tabindex="-1">As Node.js package <a class="header-anchor" href="#as-node-js-package" aria-hidden="true">#</a></h3><div class="language-js"><span class="copy"></span><pre><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> run</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> report </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">zhlint</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> value </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">\u81EA\u52A8\u5728\u4E2D\u6587\u548CEnglish\u4E4B\u95F4\u52A0\u5165\u7A7A\u683C</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> options </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">rules</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">preset</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">default</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> output </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">run</span><span style="color:#A6ACCD;">(value</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> options)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// print &#39;\u81EA\u52A8\u5728\u4E2D\u6587\u548C English \u4E4B\u95F4\u52A0\u5165\u7A7A\u683C&#39;&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(output</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">result)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// print validation report</span></span>
<span class="line"><span style="color:#82AAFF;">report</span><span style="color:#A6ACCD;">([output])</span></span>
<span class="line"></span></code></pre></div><p>And the format of validation report is more like this:</p><div class="language-bash"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">1:6 - \u6B64\u5904\u4E2D\u82F1\u6587\u5185\u5BB9\u4E4B\u95F4\u9700\u8981\u4E00\u4E2A\u7A7A\u683C</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">\u81EA\u52A8\u5728\u4E2D\u6587\u548CEnglish\u4E4B\u95F4\u52A0\u5165\u7A7A\u683C</span></span>
<span class="line"><span style="color:#A6ACCD;">\u3000\u3000\u3000\u3000\u3000\u3000^</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">1:13 - \u6B64\u5904\u4E2D\u82F1\u6587\u5185\u5BB9\u4E4B\u95F4\u9700\u8981\u4E00\u4E2A\u7A7A\u683C</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">\u81EA\u52A8\u5728\u4E2D\u6587\u548CEnglish\u4E4B\u95F4\u52A0\u5165\u7A7A\u683C</span></span>
<span class="line"><span style="color:#A6ACCD;">       \u3000\u3000\u3000\u3000\u3000\u3000^</span></span>
<span class="line"><span style="color:#A6ACCD;">Invalid files:</span></span>
<span class="line"><span style="color:#A6ACCD;">- foo.md</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Found 2 errors.</span></span>
<span class="line"></span></code></pre></div><h4 id="advanced-usage-1" tabindex="-1">Advanced usage <a class="header-anchor" href="#advanced-usage-1" aria-hidden="true">#</a></h4><p>zhlint also supports rc and ignore config files for custom rules:</p><details><div class="language-js"><span class="copy"></span><pre><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> readRc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> runWithConfig </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">zhlint</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> value </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">\u81EA\u52A8\u5728\u4E2D\u6587\u548CEnglish\u4E4B\u95F4\u52A0\u5165\u7A7A\u683C</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> dir </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">...</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// the target directory path</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> configPath </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">...</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// the config file path</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> ignorePath </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">...</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// the ignore file path</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> config </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">readRc</span><span style="color:#A6ACCD;">(dir</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> configPath</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> ignorePath)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> output </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">runWithConfig</span><span style="color:#A6ACCD;">(value</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> config)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ... further actions</span></span>
<span class="line"></span></code></pre></div></details><h3 id="as-a-standalone-package" tabindex="-1">As a standalone package <a class="header-anchor" href="#as-a-standalone-package" aria-hidden="true">#</a></h3><p>You could find a JavaScript file <code>dist/zhlint.js</code> as a standalone version. To use it, for example, you can directly add it into your browser as a <code>&lt;script&gt;</code> tag. Then there would be a global variable <code>zhlint</code> for you.</p><p><img src="`+o+'" alt=""></p><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-hidden="true">#</a></h2><ul><li><code>run(str: string, options?: Options): Result</code>: Lint a certain file. <ul><li>parameters: <ul><li><code>str</code>: The text content you want to lint.</li><li><code>options</code>: Some options to config.</li></ul></li><li>returns: <ul><li>The result of a single piece of input string. It contains fixed text content as <code>value</code> and the infor of all <code>validations</code>.</li></ul></li></ul></li><li><code>report(results: Result[], logger?: Console): void</code>: Print out the validation reports for each file. <ul><li>parameters: <ul><li><code>results</code>: An array for all linted results.</li><li><code>logger</code>: The logger instance, by default it&#39;s <code>console</code> in Node.js/browser.</li></ul></li></ul></li><li><code>readRc: (dir: string, config: string, ignore: string, logger?: Console) =&gt; Config</code>: Read config from rc file(s). For rc (run command).</li><li><code>runWithConfig(str: string, config: Config): Result</code>: Lint a certain file with rc config. For rc (run command).</li></ul><h3 id="options" tabindex="-1">Options <a class="header-anchor" href="#options" aria-hidden="true">#</a></h3><p>Customize your own linting config and other advanced options.</p><div class="language-ts"><span class="copy"></span><pre><code><span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Options</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">rules</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">RuleOptions</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">hyperParse</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;">[]</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">ignoredCases</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IgnoredCase</span><span style="color:#A6ACCD;">[]</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">logger</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Console</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><ul><li><code>rules</code>: customize the linting config. It could be <code>undefined</code> which means linting nothing. It could be <code>{ preset: &#39;default&#39; }</code> which just uses the default config. For more details of <code>RuleOptions</code>, please see <a href="#supported-rules">supported rules</a></li><li><code>hyperParse</code>: customize the hyper parser by their names. It could be <code>undefined</code> which means just use default <a href="https://github.com/Jinjiang/zhlint/tree/master/src/hypers/ignore.js" target="_blank" rel="noopener noreferrer">ignored cases parser</a>, <a href="https://github.com/Jinjiang/zhlint/tree/master/src/hypers/md.js" target="_blank" rel="noopener noreferrer">Markdown parser</a> and the <a href="https://github.com/Jinjiang/zhlint/tree/master/src/hypers/hexo.js" target="_blank" rel="noopener noreferrer">Hexo tags parser</a>.</li><li><code>ignoredCases</code>: provide exception cases which you would like to skip. <ul><li><code>IgnoredCase</code>: <code>{ prefix?, textStart, textEnd?, suffix? }</code><ul><li>Just follows a certain format inspired from <a href="https://github.com/WICG/ScrollToTextFragment" target="_blank" rel="noopener noreferrer">W3C Scroll To Text Fragment Proposal</a>.</li></ul></li></ul></li><li><code>logger</code>: same to the parameter in <code>report(...)</code>.</li></ul><h3 id="rc-config" tabindex="-1">RC Config <a class="header-anchor" href="#rc-config" aria-hidden="true">#</a></h3><ul><li><code>preset</code>: <code>string</code> (optional)</li><li><code>rules</code>: <code>RuleOptions</code> without the <code>preset</code> field. (optional)</li><li><code>hyperParsers</code>: <code>string[]</code> (optional)</li><li><code>ignores</code>: <code>string[]</code> and the priority is lower than <code>.zhlintignore</code>. (optional)</li></ul><h3 id="output" tabindex="-1">Output <a class="header-anchor" href="#output" aria-hidden="true">#</a></h3><div class="language-ts"><span class="copy"></span><pre><code><span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Result</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// the basic info and availability of the file</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">file</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">disabled</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// the original content of the file</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">origin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// all the error messages</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">validations</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Validation</span><span style="color:#A6ACCD;">[]</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Validation</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">message</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">index</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">length</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><ul><li><code>Result</code><ul><li><code>file</code>: The file name. It&#39;s an optional field which is only used in CLI.</li><li><code>origin</code>: the original text content.</li><li><code>result</code>: the finally fixed text content.</li><li><code>validations</code>: All the validation information.</li></ul></li><li><code>Validation</code><ul><li><code>index</code>: The index of the target token in the input string.</li><li><code>length</code>: The length of the target token in the input string.</li><li><code>message</code>: The description of this validation in natural language.</li></ul></li></ul><h3 id="advanced-usage-2" tabindex="-1">Advanced usage <a class="header-anchor" href="#advanced-usage-2" aria-hidden="true">#</a></h3><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-hidden="true">#</a></h2><h3 id="markdown-syntax-support" tabindex="-1">Markdown syntax support <a class="header-anchor" href="#markdown-syntax-support" aria-hidden="true">#</a></h3><p>We support lint your text content in Markdown syntax by default. For example:</p><div class="language-js"><span class="copy"></span><pre><code><span class="line"><span style="color:#82AAFF;">run</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">\u81EA\u52A8\u5728_\u4E2D\u6587_\u548C**English**\u4E4B\u95F4\u52A0\u5165\u7A7A\u683C</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> options)</span></span>\n<span class="line"></span></code></pre></div><p>It will analyse the Markdown syntax first and extract the pure text content and do the lint job. After that the fixed pure text content could be replaced back to the raw Markdown string and returned as the output <code>value</code> in result.</p><h3 id="hexo-tags-syntax-support" tabindex="-1">Hexo tags syntax support <a class="header-anchor" href="#hexo-tags-syntax-support" aria-hidden="true">#</a></h3><p>Specially, we support <a href="https://hexo.io/docs/tag-plugins" target="_blank" rel="noopener noreferrer">Hexo tags syntax</a> just because when we use Hexo to build Vue.js website, the markdown source files more or less include special tags like that so got the unpredictable result.</p><p>As a result, we additionally skip the Hexo-style tags by default. For example:</p><div class="language-js"><span class="copy"></span><pre><code><span class="line"><span style="color:#82AAFF;">run</span><span style="color:#A6ACCD;">(</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">\u73B0\u5728\u8FC7\u6EE4\u5668\u53EA\u80FD\u7528\u5728\u63D2\u5165\u6587\u672C\u4E2D (`{% raw %}{{ }}{% endraw %}` tags)\u3002</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  options</span></span>\n<span class="line"><span style="color:#A6ACCD;">)</span></span>\n<span class="line"></span></code></pre></div><h3 id="setup-ignored-cases" tabindex="-1">Setup ignored cases <a class="header-anchor" href="#setup-ignored-cases" aria-hidden="true">#</a></h3><p>In some real cases we have special text contents not follow the rules by reason. So we could ues <code>ignoredCases</code> option to config that. For example we&#39;d like to keep the spaces inside a pair of brackets, which is invalid by default. Then we could write one more line of HTML comment anywhere inside the file:</p><div class="language-md"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- the good case --&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">text before (text inside) text after</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- the bad case --&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">vm.$on( event, callback )</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- then we could write this down below to make it work --&gt;</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- zhlint ignore: ( , ) --&gt;</span></span>\n<span class="line"></span></code></pre></div><p>or just pass it through as an option:</p><div class="language-js"><span class="copy"></span><pre><code><span class="line"><span style="color:#82AAFF;">run</span><span style="color:#A6ACCD;">(str</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">ignoredCases</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">textStart</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">( </span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">textEnd</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;"> )</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"></span></code></pre></div><p>If you want to ignore the whole file, you can also add this HTML comment:</p><div class="language-md"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- zhlint disabled --&gt;</span></span>\n<span class="line"></span></code></pre></div><h2 id="supported-preproccessors-hyper-parsers" tabindex="-1">Supported preproccessors (hyper parsers) <a class="header-anchor" href="#supported-preproccessors-hyper-parsers" aria-hidden="true">#</a></h2><ul><li><code>ignore</code>: find all ignored pieces by the HTML comment <code>&lt;!-- zhlint ignore: ... --&gt;</code></li><li><code>hexo</code>: find all Hexo tags to avoid them being parsed.</li><li><code>markdown</code>: parse by markdown syntax and find all block-level texts and inline-level marks.</li></ul><h2 id="supported-rules" tabindex="-1">Supported rules <a class="header-anchor" href="#supported-rules" aria-hidden="true">#</a></h2><p><em>Almost the rules come from the past translation experiences in <a href="https://www.w3.org/html/ig/zh/wiki/Main_Page" target="_blank" rel="noopener noreferrer">W3C HTML Chinese interest group</a> and <a href="https://github.com/vuejs/cn.vuejs.org/wiki" target="_blank" rel="noopener noreferrer">Vue.js Chinese docsite</a>.</em></p><p><em>... and this part might be controversial. So if you don&#39;t feel well at some point, we definitely would love to know and improve. Opening an <a href="https://github.com/jinjiang/zhlint/issues" target="_blank" rel="noopener noreferrer">issue</a> is always welcome. Then we could discuss about the possible better option or decision.</em></p><div class="language-ts"><span class="copy"></span><pre><code><span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">RuleOptions</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* PRESET */</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// Custom preset, currently only support:</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// - `&#39;default&#39;`</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">preset</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* PUNCTUATIONS */</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// Convert these punctuations into half-width.</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// default preset: `()`</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// e.g. `\uFF08\u6587\u5B57\uFF09` -&gt; `(\u6587\u5B57)`</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">halfWidthPunctuation</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// Convert these punctuations into full-width.</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// default preset: `\uFF0C\u3002\uFF1A\uFF1B\uFF1F\uFF01\u201C\u201D\u2018\u2019`</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// e.g. `\u6587\u5B57,\u6587\u5B57.` -&gt; `\u6587\u5B57\uFF0C\u6587\u5B57\u3002`</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">fullWidthPunctuation</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// Treat these full-width punctuations as half-fullWidthPunctuation</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// when processing the spaces issues around them.</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// Since something like quotes in morder Chinese fonts are</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// only rendered in half-width.</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// default preset: `\u201C\u201D\u2018\u2019`</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">adjustedFullWidthPunctuation</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// Convert traditional Chinese punctuations into simplified ones or vice versa.</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// default preset: `simplified`</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// e.g. `\u300C\u6587\u5B57\u300D` -&gt; `\u201C\u6587\u5B57\u201D`</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">unifiedPunctuation</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">traditional</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">simplified</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// Special case: skip `fullWidthPunctuation` for abbreviations.</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// default preset:</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// `[&#39;Mr.&#39;,&#39;Mrs.&#39;,&#39;Dr.&#39;,&#39;Jr.&#39;,&#39;Sr.&#39;,&#39;vs.&#39;,&#39;etc.&#39;,&#39;i.e.&#39;,&#39;e.g.&#39;,&#39;a.k.a&#39;]`</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">skipAbbrs</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;">[]</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* SPACES AROUND LETTERS */</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// default preset: `true`</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// - `true`: one space</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// - `undefined`: do nothing</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// e.g. `foo  bar` -&gt; `foo bar`</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">spaceBetweenHalfWidthLetters</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// default preset: `true`</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// - `true`: zero space</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// - `undefined`: do nothing</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// e.g. `\u6587 \u5B57` -&gt; `\u6587\u5B57`</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">noSpaceBetweenFullWidthLetters</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// default preset: `true`</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// - `true`: one space</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// - `false`: zero space</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// - `undefined`: do nothing</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// e.g. `\u6587\u5B57 foo\u6587\u5B57` -&gt; `\u6587\u5B57 foo \u6587\u5B57` (`true`)</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// e.g. `\u6587\u5B57foo \u6587\u5B57` -&gt; `\u6587\u5B57foo\u6587\u5B57` (`false`)</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">spaceBetweenMixedWidthLetters</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// Special case: skip `spaceBetweenMixedWidthContent`</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// for numbers x Chinese units.</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// default preset: `\u5E74\u6708\u65E5\u5929\u53F7\u65F6\u5206\u79D2`</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">skipZhUnits</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* SPACES AROUND PUNCTUATIONS */</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// default preset: `true`</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// - `true`: zero space</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// - `undefined`: do nothing</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// e.g. `\u6587\u5B57 \uFF0C\u6587\u5B57` -&gt; `\u6587\u5B57\uFF0C\u6587\u5B57`</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">noSpaceBeforePunctuation</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// default preset: `true`</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// - `true`: one space</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// - `false`: zero space</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// - `undefined`: do nothing</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// e.g. `\u6587\u5B57,\u6587\u5B57` -&gt; `\u6587\u5B57, \u6587\u5B57` (`true`)</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// e.g. `\u6587\u5B57, \u6587\u5B57` -&gt; `\u6587\u5B57,\u6587\u5B57` (`false`)</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">spaceAfterHalfWidthPunctuation</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// default preset: `true`</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// - `true`: zero space</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// - `undefined`: do nothing</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// e.g. `\u6587\u5B57\uFF0C \u6587\u5B57` -&gt; `\u6587\u5B57\uFF0C\u6587\u5B57`</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">noSpaceAfterFullWidthPunctuation</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* SPACES AROUND QUOTES */</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// default preset: `true`</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// - `true`: one space</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// - `false`: zero space</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// - `undefined`: do nothing</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// e.g. `\u6587\u5B57 &quot;\u6587\u5B57&quot;\u6587\u5B57` -&gt; `\u6587\u5B57 &quot;\u6587\u5B57&quot; \u6587\u5B57` (`true`)</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// e.g. `\u6587\u5B57&quot;\u6587\u5B57&quot; \u6587\u5B57` -&gt; `\u6587\u5B57&quot;\u6587\u5B57&quot;\u6587\u5B57` (`false`)</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">spaceOutsideHalfQuote</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// default preset: `true`</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// - `true`: zero space</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// - `undefined`: do nothing</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// e.g. `\u6587\u5B57 \u201C\u6587\u5B57\u201D \u6587\u5B57` -&gt; `\u6587\u5B57\u201C\u6587\u5B57\u201D\u6587\u5B57`</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">noSpaceOutsideFullQuote</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// default preset: `true`</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// - `true`: zero space</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// - `undefined`: do nothing</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// e.g. `\u6587\u5B57\u201C \u6587\u5B57 \u201D\u6587\u5B57` -&gt; `\u6587\u5B57\u201C\u6587\u5B57\u201D\u6587\u5B57`</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">noSpaceInsideQuote</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* SPACES AROUND BRACKETS */</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// default preset: `true`</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// - `true`: one space</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// - `false`: zero space</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// - `undefined`: do nothing</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">spaceOutsideHalfBracket</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// default preset: `true`</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// - `true`: zero space</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// - `undefined`: do nothing</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">noSpaceOutsideFullBracket</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// default preset: `true`</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// - `true`: zero space</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// - `undefined`: do nothing</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">noSpaceInsideBracket</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* SPACES AROUND CODE */</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// default preset: `true`</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// - `true`: one space</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// - `false`: zero space</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// - `undefined`: do nothing</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// e.g. &#39;\u6587\u5B57 `code`\u6587\u5B57&#39; -&gt; &#39;\u6587\u5B57 `code` \u6587\u5B57&#39; (&#39;true&#39;)</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// e.g. &#39;\u6587\u5B57`code` \u6587\u5B57&#39; -&gt; &#39;\u6587\u5B57`code`\u6587\u5B57&#39; (&#39;false&#39;)</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">spaceOutsideCode</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* SPACES AROUND MARKDOWN/HTML WRAPPERS */</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// default `true`</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// - `true`: zero space</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// - `undefined`: do nothing</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// e.g. `\u6587\u5B57** foo **\u6587\u5B57` -&gt; `\u6587\u5B57 **foo** \u6587\u5B57`</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">noSpaceInsideWrapper</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* SPACES AT THE BEGINNING/END */</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// default `true`</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// e.g. ` \u6587\u5B57 ` -&gt; `\u6587\u5B57`</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">trimSpace</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><h2 id="more-information" tabindex="-1">More information <a class="header-anchor" href="#more-information" aria-hidden="true">#</a></h2><p>zhlint is now open sourced on <a href="https://github.com/zhlint" target="_blank" rel="noopener noreferrer">GitHub</a> and <a href="https://github.com/jinjiang/zhlint/issues" target="_blank" rel="noopener noreferrer">issues</a> welcome.</p>',59),r=[c];function i(y,D,d,F,C,A){return n(),a("div",null,r)}var f=s(t,[["render",i]]);export{h as __pageData,f as default};
